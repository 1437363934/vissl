# @package _global_
config:
  CHECKPOINT:
    DIR: "checkpoints"
    AUTO_RESUME: True
    CHECKPOINT_FREQUENCY: 1
  DATA:
    NUM_DATALOADER_WORKERS: 5
    TRAIN:
      DATA_SOURCES: [disk_folder]
      DATA_PATHS: ["<path to train folder>"]
      LABEL_SOURCES: [disk_folder]
      DATASET_NAMES: [imagenet1k_folder]
      BATCHSIZE_PER_REPLICA: 40
      TRANSFORMS:
        - name: RandomResizedCrop
          size: 224
        - name: RandomHorizontalFlip
        - name: ColorJitter
          brightness: 0.4
          contrast: 0.4
          saturation: 0.4
          hue: 0.4
        - name: ToTensor
        - name: Normalize
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      DROP_LAST: True
    TEST:
      DATA_SOURCES: [disk_folder]
      DATA_PATHS: ["<path to test folder>"]
      LABEL_SOURCES: [disk_folder]
      DATASET_NAMES: [imagenet1k_folder]
      BATCHSIZE_PER_REPLICA: 32
      TRANSFORMS:
        - name: Resize
          size: 256
        - name: CenterCrop
          size: 224
        - name: ToTensor
        - name: Normalize
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      DROP_LAST: True
  MODEL:
    TRUNK:
    # testing model
#      NAME: resnet
#      TRUNK_PARAMS:
#        RESNETS:
#          DEPTH: 50
#    HEAD:
#      PARAMS: [
#        ["mlp", {"dims": [2048, 1000]}],
#      ]

    # 10B models
      NAME: regnet
      TRUNK_PARAMS:
        # REGNET:  ## 1464.50 - MODEL1
        #   depth: 32
        #   w_0: 456
        #   w_a: 160.83
        #   w_m: 2.52
        #   group_width: 264
        # REGNET:  ## 5496.7697 - MODEL2
        #   depth: 27
        #   w_0: 1280
        #   w_a: 460.83
        #   w_m: 2.52
        #   group_width: 744
        # REGNET:  ## 8513.301 - MODEL3
        #   depth: 27
        #   w_0: 1600
        #   w_a: 560.83
        #   w_m: 2.52
        #   group_width: 926
        # REGNET:  ## 8859.8083 - MODEL7
        #   depth: 27
        #   w_0: 1680
        #   w_a: 590.83
        #   w_m: 2.52
        #   group_width: 972
        # REGNET:  ## 12130.3875 - MODEL8
        #   depth: 27
        #   w_0: 1800
        #   w_a: 660.83
        #   w_m: 2.52
        #   group_width: 1042
        # REGNET:  ## 17535.7785 - MODEL4
        #   depth: 32
        #   w_0: 1600
        #   w_a: 560.83
        #   w_m: 2.52
        #   group_width: 926
        # REGNET:  ## 11845.0038 - MODEL5
        #   depth: 29
        #   w_0: 1600
        #   w_a: 560.83
        #   w_m: 2.52
        #   group_width: 926
        # REGNET:  ## 13039.9273 - MODEL6
        #   depth: 29
        #   w_0: 1680
        #   w_a: 590.83
        #   w_m: 2.52
        #   group_width: 972
        REGNET:  ## 9557.0455 - MODEL9
          depth: 27
          w_0: 1744
          w_a: 620.83
          w_m: 2.52
          group_width: 1010
    #HEAD:
    #  PARAMS: [
        # ["swav_head", {"dims": [7392, 7392, 128], "use_bn": False, "num_clusters": [3000]}],  # MODEL1
        # ["swav_head", {"dims": [20832, 20832, 128], "use_bn": False, "num_clusters": [3000]}],  # MODEL2
        # ["swav_head", {"dims": [25928, 25928, 128], "use_bn": False, "num_clusters": [3000]}],  # MODEL3
        # ["swav_head", {"dims": [25928, 8192, 128], "use_bn": False, "num_clusters": [3000]}],  # MODEL4 and MODEL5
        # ["swav_head", {"dims": [27216, 8192, 128], "use_bn": False, "num_clusters": [3000]}],  # MODEL6 and MODEL7
        # ["swav_head", {"dims": [29176, 8192, 128], "use_bn": False, "num_clusters": [3000]}],  # MODEL8
    #    ["swav_head", {"dims": [28280, 8192, 128], "use_bn": False, "num_clusters": [3000]}],  # MODEL8
    #  ]
    HEAD:
      PARAMS: [
        # ["mlp", {"dims": [7392, 1000]}],   # MODEL1
        # ["mlp", {"dims": [20832, 1000]}],   # MODEL2
        # ["mlp", {"dims": [25928, 1000]}],   # MODEL3
        # ["mlp", {"dims": [25928, 1000]}],   # MODEL4 and Model5
        # ["mlp", {"dims": [27216, 1000]}],   # MODEL6 and model7
        # ["mlp", {"dims": [29176, 1000]}],   # MODEL8
        ["mlp", {"dims": [28280, 1000]}],   # MODEL9
      ]
  LOSS:
    name: cross_entropy_multiple_output_single_target
    cross_entropy_multiple_output_single_target:
      ignore_index: -1
  OPTIMIZER:
      name: sgd
      weight_decay: 0.0001
      momentum: 0.9
      num_epochs: 105
      nesterov: True
      regularize_bn: False
      regularize_bias: True
      param_schedulers:
        lr:
          auto_lr_scaling: # learning rate is automatically scaled based on batch size
            auto_scale: true
            base_value: 0.1
            base_lr_batch_size: 256 # learning rate of 0.1 is used for batch size of 256
          name: multistep
          # We want the learning rate to drop by 1/10
          # at epochs [30, 60, 90, 100]
          milestones: [30, 60, 90, 100] # epochs at which to drop the learning rate (N vals)
          values: [0.1, 0.01, 0.001, 0.0001, 0.00001] # the exact values of learning rate (N+1 vals)
          update_interval: epoch
  METERS:
    accuracy_list_meter:
      num_meters: 1
      topk_values: [1, 5]
  TRAINER:
    TRAIN_STEP_NAME: standard_train_step
  DISTRIBUTED:
    BACKEND: nccl
    NUM_NODES: 1
    NUM_PROC_PER_NODE: 1 # number of DDP ranks per node
    RUN_ID: auto
    MANUAL_GRADIENT_REDUCTION: True
  MACHINE:
    DEVICE: gpu
  VERBOSE: True
  LOG_FREQUENCY: 100
  TEST_ONLY: False
  TEST_EVERY_NUM_EPOCH: 1
  TEST_MODEL: True
  SEED_VALUE: 0
  MULTI_PROCESSING_METHOD: fork
